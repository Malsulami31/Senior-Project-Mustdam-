from fastapi import FastAPI
from fastapi.responses import JSONResponse
import pandas as pd
import os
from fastapi.middleware.cors import CORSMiddleware

app = FastAPI()
# Add CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["http://localhost:3000"],  # Update with your frontend's URL
    allow_credentials=True,
    allow_methods=["*"],  # Allow all HTTP methods
    allow_headers=["*"],  # Allow all HTTP headers
)
# Path to the CSV file generated by your model
CSV_FILE_PATH = "/Users/ghadihersi/Downloads/Forecasting-CO2-emission-5years/forecast_results.csv"  # Ensure this path matches where the CSV file is saved

# Function to read the CSV file and return the data as a JSON response
def read_csv_to_json():
    try:
        # Check if the file exists
        if not os.path.exists(CSV_FILE_PATH):
            return {"error": "CSV file not found. Please ensure the model has generated the file."}
        
        # Read the CSV file
        data = pd.read_csv(CSV_FILE_PATH)

        # Convert the dataframe to a list of dictionaries (suitable for JSON)
        forecast_data = data.to_dict(orient='records')

        return forecast_data

    except Exception as e:
        return {"error": f"An error occurred while processing the CSV file: {str(e)}"}

@app.get("/forecast/")
async def get_forecast():
    # Get the forecast data from the CSV file
    forecast_data = read_csv_to_json()

    if "error" in forecast_data:
        # Return error if the CSV file doesn't exist or there's another issue
        return JSONResponse(content=forecast_data, status_code=400)
    else:
        # Return the data as a JSON response
        return JSONResponse(content=forecast_data)

